/*
 * Copyright 2016-2017 Alex Zhang aka. ztc1997
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion Integer.parseInt("$compileSdkVer")
    buildToolsVersion "$buildToolsVer"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion Integer.parseInt("$targetSdkVer")
        versionCode Integer.parseInt("$verCode")
        versionName "$verName"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    publishNonDefault true

    defaultPublishConfig 'release'

    // Fix for defaultPublishConfig not working as expected
    // ref: https://github.com/dcendents/android-maven-gradle-plugin/issues/11
    libraryVariants.all { variant ->
        if (publishNonDefault && variant.name == defaultPublishConfig) {
            def bundleTask = tasks["bundle${variant.name.capitalize()}"]
            artifacts {
                archives(bundleTask.archivePath) {
                    classifier null //necessary to get rid of the suffix in the artifact
                    builtBy bundleTask
                    name name.replace('-' + variant.name, '')
//necessary to get rid of the suffix from the folder name
                }
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'

    compile "com.android.support:support-annotations:$supportLibVersion"
    compile 'eu.chainfire:libsuperuser:1.0.0.201608240809'
}

version = "$verName"
def siteUrl = 'https://github.com/ztc1997/anycall'
def gitUrl = 'https://github.com/ztc1997/anycall.git'
group = "com.ztc1997.anycall"
install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                // Add your description here
                name 'Call system service RPC from normal apps (ROOT)'
                url siteUrl
                // Set your license
                licenses {
                    license {
                        name 'GNU GENERAL PUBLIC LICENSE, Version 3'
                        url 'https://www.gnu.org/licenses/gpl-3.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'ztc1997'
                        name 'Alex Zhang'
                        email 'ztc2011@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = "maven"
        name = "anycall"
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["GPL-3.0"]
        publish = true
    }
}
